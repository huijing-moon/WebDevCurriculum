* git의 clone/add/commit/push/pull/branch/stash 명령은 무엇이며 어떨 때 이용하나요? 그리고 어떻게 사용하나요?
* git의 Object, Commit, Head, Branch, Tag는 어떤 개념일까요? git 시스템은 프로젝트의 히스토리를 어떻게 저장할까요?
* 리모트 git 저장소에 원하지 않는 파일이 올라갔을 때 이를 되돌리려면 어떻게 해야 할까요?


git add . : 현재까지 직업중이던 파일들을 모두 추가해 깃허브에 올리기 위한 staging area(무대)에 올림.

git pull: 코드를 받아와 변경점을 merge한다. 충돌이 일어날 수 있음
git fetch: 코드를 받아온다.

코드 잠깐 저장하고, 다른 브랜치로 이동 (아직 커밋하지 않은 일을 저장, 작업 중인 워킹 디렉토리)
git stash: 코드를 stash 영역에 잠시 저장하기 (스택구조로 LIFO 으로 작업을 불러올 수 있음)

브랜치: 코드를 통째로 복사하고 나서 원래 코드와는 상관없이 독립적으로 개발을 진행할 수 있음.
git branch : 브랜치를 관리하는 도구
remote branch, ref branch, local branch

uncommit/ staying/ commit
1. 코드 파일의 내용 변경시 uncommit
2. 파일의 변경 내역 add하면 index 에 추가되고 staying이 됨.
3. 변경 내용을 commit으로 확정
4. commit이 완료되면 서버에 push 가능

git reset: add한 파일 취소
git reset --merge : merge한 코드 취소

git reset --soft HEAD^ : commit 코드 살리기
git reset --hard HEAD^ : commit 하기 이전의 코드로 돌아가기

git은 데이터를 Change Set 이나 변경사항(Diff)으로 기록하지 않고 일련의 스냅샷으로 기록.
git은 Content-addressable 파일 시스템. (git의 핵심은 key-value 데이터 저장소)

git의 object
blob(파일 내용), Tree(디렉터리와 blob의 정보(파일명)등을 담음), commit, Tag (커밋객체)

HEAD : 현재 체크아웃된 브랜치의 가장 최신 커밋
따라서 branch를 변경하게 되면, 변경한 branch의 가장 최신 commit을 가리키게 됨.
