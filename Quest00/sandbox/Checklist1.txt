## Checklist
* 형상관리 시스템은 왜 나오게 되었을까요?
* git은 어떤 형상관리 시스템이고 어떤 특징을 가지고 있을까요? 분산형 형상관리 시스템이란 무엇일까요?
  * git은 어떻게 개발되게 되었을까요? git이 분산형 시스템을 채택한 이유는 무엇일까요?
* git과 GitHub은 어떻게 다를까요?


* 형상관리 시스템 : 소프트웨어의 변경사항을 체계적으로 추적하고 통제하는 것으로, 형상관리는 일반적인 단순 버전관리 기반의 소프트웨어 운용을 좀 더
포괄적인 학술 분야의 형태로 넓히는 근간을 이야기 한다. 소프트웨어 소스 코드 뿐 아니라 개발 환경, 빌드 구조 등 전반적인 환경 전반적인
내역에 대한 관리 체계를 정의하고 있다.(위키백과)
어떠한 문서나 파일이 변경된 경우, 변경된 내용과 그 원인을 기록 하였다가 나중에 필요한 경우 찾아볼 수 있도록 관리 ..

https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EA%B8%B0%EC%B4%88
* git: 분산버전관리시스템
@ 버전관리시스템 : 시간에 따라 파일변화 기록, 나중에 특정 버전을 꺼내올 수 있음
@ 분산버전관리시스템 (DVCS)
- 저장소와 히스토리를 전부 복제,
- 서버에 문제가 생겨도 복구 가능
- clone은 모든 데이터를 가진 진정한 백업
- 리모트 저장소가 존재, 동시에 다양한 그룹과 방법으로 협업 가능

* Linux 커널이 BitKeeper라고 불리는 상용 DVCS를 사용하다가, 무료사용이 재고되어 Linux 개발 커뮤니티가
자체 도구를 만드는 계기가 됨.
@ git의 초기 목표
- 빠른 속도
- 단순한 구조
- 비선형적인 개발 (수천 개의 동시다발적인 브랜치)
- 완벽한 분산
- Linux 커널 같은 대형 프로젝트에도 유용할 것 (속도가 데이터 크기 면에서)

* GitHub: 가장 큰 Git 저장소 호스트
- git은 로컬에서 프로젝트를 관리할 수 있게 함. 버전 관리 '프로그램'
- github는 git 저장소를 관리하는 클라우드 기반 호스팅 서비스, 여러 사람이 참여해 버전 제어 및 공동 작업 가능